version: '3'
services:
  db:
    image: mysql # image auto exposes port 5432 in container
    environment:
      MYSQL_ROOT_PASSWORD: dev
      MYSQL_DATABASE: mysql
    restart: always
    volumes:
      - "./db/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/"
  server:
    image: maven:3.3.9-jdk-8-alpine
    command: ["mvn", "spring-boot:run"]
    volumes:
      - "./simple-cab:/simple-cab"
    ports:
      - "8080:8080"
    working_dir: /simple-cab/server
  client:
    image: maven:3.3.9-jdk-8-alpine
    command: ["/bin/bash"]
    stdin_open: true
    tty: true
    working_dir: /simple-cab/client/target
    volumes:
      - "./simple-cab:/simple-cab"
# #
# docker run \
#   -e DISPLAY=${DISPLAY} -ti \
#   -v /tmp/.X11-unix:/tmp/.X11-unix \
#   -v ~/.Idea:/home/developer/.Idea \
#   -v ~/.Idea.java:/home/developer/.java \
#   -v ~/.Idea.maven:/home/developer/.m2 \
#   -v ~/.Idea.gradle:/home/developer/.gradle \
#   -v ~/workspace:/home/developer/workspace \
#   --name idea \
# alexn34/intellij-idea /bin/bash

#     A network called java_default is created.
#     A container is created using intellij’s configuration. It joins the network java_default under the name web.
#     A container is created using db’s configuration. It joins the network java_default under the name db.
# cd ./simple-cab/Server/target/classes
# java com.datarepublic.simplecab.Server
# cd ./simple-cab/client/target/classes
# java com.datarepublic.simplecab.Client
